name: 'pipeline'

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

# Assign permissions for the job to read contents and write a token for OIDC auth
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      # 1. Checkout the repository code
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Authenticate to Google Cloud using Workload Identity Federation
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      # 3. Setup the Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.7.0' # Specify your desired version
          cli_config_credentials_token: ${{ steps.auth.outputs.id_token }}

      # The following steps assume your Terraform code is in a 'terraform' subdirectory
      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false

      # Apply changes only on a push to the main branch
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
